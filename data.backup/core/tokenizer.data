#comment_tokenizer {
    #note {
        "TODO "         todo
        "FIX "          fix
        "WIP "          wip
    }
    #block_comment  [ "@@" "@@" ]
    #line_comment   '@'
}

#number_tokenizer {
    #format {
        #none {
            #none           decimal
            'D'             decimal
            'B'             binary
            'Z'             duodecimal
            'X'             hexadecimal
        }
    }
    #system {
        binary          [ '0' '1'                                                         ]
        decimal         [ '0' '1' '2' '3' '4' '5' '6' '7' '8' '9'                         ]
        duodecimal      [ '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 'X' 'E'                 ]
        hexadecimal     [ '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 'A' 'B' 'C' 'D' 'E' 'F' ]
    }
    #float          '.'
}

#character_tokenizer {
    #replace {
        "\\\\"          '\\'
        "\\\'"          '\''
        "\\\""          '\"'
        "\\0"           '\0'
        "\\b"           '\b'
        "\\n"           '\n'
        "\\t"           '\t'
        "\\r"           '\r'
        "\\e"           '\e'
    }
    #delimiter      [ '\'' '\'' ]
}

#string_tokenizer {
    #replace {
        "\\\\"          '\\'
        "\\\'"          '\''
        "\\\""          '\"'
        "\\0"           '\0'
        "\\b"           '\b'
        "\\n"           '\n'
        "\\t"           '\t'
        "\\r"           '\r'
        "\\e"           '\e'
    }
    #delimiter      [ '\"' '\"' ]
}

#operator_tokenizer {
    #translate {
        ":="            assign
        "&&"            logical_and
        "^^"            logical_xor
        "||"            logical_or
        "=="            equals
        "!="            not_equals
        ">="            not_smaller
        "<="            not_bigger
        "<<"            shift_left
        ">>"            shift_right
        ">"             bigger
        "<"             smaller
        ':'             index
        '['             open_square
        ']'             close_square
        '{'             open_curly
        '}'             close_curly
        '('             open_round
        ')'             close_round
        '!'             boolean
        '$'             immediate
        '+'             add
        '-'             subtract
        '*'             multiply
        '/'             divide
        '%'             modulo
        '~'             concatinate
        '&'             and
        '^'             xor
        '|'             or
        ','             comma
        '#'             keyword
    }
    #ignored        [ '\r' '\t' '\n' ' ' ]
    #invalid        [ '\\' ';' ]
}

#identifier_tokenizer {
    #prefix          [ _ a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z ]
}
